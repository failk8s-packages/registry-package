---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  namespace: registry
data:
  config.yml: |-
    version: 0.1
    log:
      level: debug
    storage:
      filesystem:
        rootdirectory: "/var/lib/registry"
      cache:
        blobdescriptor: inmemory
    http:
      addr: :5000
      headers:
        X-Content-Type-Options:
          - nosniff
    validation:
      disabled: true
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: registry
spec:
  type: ClusterIP
  ports:
    - port: 5000
      protocol: TCP
      name: registry
      targetPort: 5000
  selector:
    app: registry
    release: registry
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: registry
spec:
  selector:
    matchLabels:
      app: registry
      release: registry
  replicas: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: registry
        release: registry
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      containers:
        - name: registry
          image: "registry:2.7.1"
          imagePullPolicy: IfNotPresent
          command:
            - /bin/registry
            - serve
            - /etc/docker/registry/config.yml
          ports:
            - containerPort: 5000
          livenessProbe:
            httpGet:
              path: /
              port: 5000
          readinessProbe:
            httpGet:
              path: /
              port: 5000
          resources: {}
          volumeMounts:
            - name: data
              mountPath: /var/lib/registry/
            - name: registry-config
              mountPath: "/etc/docker/registry"
      volumes:
        - name: data
          emptyDir: {}
        - name: registry-config
          configMap:
            name: registry-config
